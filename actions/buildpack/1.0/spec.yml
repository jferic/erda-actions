name: buildpack
version: "1.0"
type: action
displayName: ${{ i18n.displayName }}
logoUrl: //terminus-paas.oss-cn-hangzhou.aliyuncs.com/paas-doc/2020/10/23/c5867d7a-ba0e-4357-bec7-6d7599889a2c.png
category: build_management
desc: ${{ i18n.desc }}
public: true
supportedVersions: # Deprecated. Please use supportedErdaVersions instead.
  - ">= 3.5"
supportedErdaVersions:
  - ">= 1.0"

params:
  - name: context
    required: true
    desc: ${{ i18n.params.context.desc }}
  - name: modules
    type: struct_array
    desc: ${{ i18n.params.modules.desc }}
    struct:
      - name: name
        required: true
        desc: ${{ i18n.params.modules.struct.name.desc }}
      - name: path
        desc: ${{ i18n.params.modules.struct.path.desc }}
      - name: image
        type: struct
        struct:
          - {name: name, desc: 镜像名 }
          - {name: username, desc: docker registry 用户名 }
          - {name: password, desc: docker registry 密码 }
  - name: bp_repo
    desc: ${{ i18n.params.bp_repo.desc }}
  - name: bp_ver
    desc: ${{ i18n.params.bp_ver.desc }}
  - name: bp_args
    desc: ${{ i18n.params.bp_args.desc }}
    type: map
  - name: http_proxy
    desc: ${{ i18n.params.http_proxy.desc }}
    type: string
  - name: https_proxy
    desc: ${{ i18n.params.https_proxy.desc }}
    type: string
  - name: only_build
    desc: ${{ i18n.params.only_build.desc }}
    type: bool
  - name: language
    desc: ${{ i18n.params.language.desc }}
    type: string
  - name: build_type
    desc: ${{ i18n.params.build_type.desc }}
    type: string
  - name: container_type
    desc: ${{ i18n.params.container_type.desc }}
    type: string


labels:
  maintainer: lj@terminus.io

options:
  fetchHistoryBPConfig: true

accessibleAPIs:
  # 查询构建产物
  - path: /api/build-artifacts/<sha>
    method: GET
    schema: http
  # 注册构建产物
  - path: /api/build-artifacts
    method: POST
    schema: http
  # 上报缓存镜像
  - path: /api/build-caches
    method: POST
    schema: http
locale:
  zh-CN:
    desc: >-
      平台内置的应用构建逻辑。
      目前支持：
      1. Java
      2. NodeJS(Herd)
      3. Single Page Application(SPA)
      4. Dockerfile
    displayName: 统一构建器
    params.bp_args.desc: 指定 buildpack 参数。
    params.bp_repo.desc: 使用的 buildpack 类型。非特殊情况下无需指定，平台会自动探测出合适的类型。
    params.bp_ver.desc: 使用的 buildpack 版本。与 bp_repo 一起使用。
    params.build_type.desc: 指定构建类型
    params.container_type.desc: 指定容器类型
    params.context.desc: 应用所在的上下文环境。所有的 module 必须在该路径下
    params.http_proxy.desc: 指定 HTTP 代理 参数。
    params.https_proxy.desc: 指定 HTTPS 代理 参数。
    params.language.desc: 指定某种语言
    params.modules.desc: Buildpack 的对象是应用（Application），而一个应用包含一个或多个模块（Module）。 对于多模块项目，这里只需要写最终需要运行的模块；对于 lib 类的模块，无需声明。
    params.modules.struct.name.desc: 模块名
    params.modules.struct.path.desc: 模块路径
    params.only_build.desc: 只编译应用，不制作镜像
  en-US:
    desc: >-
      The built-in application building logic of the platform. 
      Currently supports: 
      1. Java 
      2. NodeJS (Herd) 
      3. Single Page Application (SPA) 
      4. Dockerfile
    displayName: Unified builder
    params.bp_args.desc: Specify buildpack parameters.
    params.bp_repo.desc: The buildpack type used. Generally it does not need to be specified as the platform will automatically detect the appropriate one.
    params.bp_ver.desc: The buildpack version used. Use with bp_repo.
    params.build_type.desc: Specify the build type
    params.container_type.desc: Specify the container type
    params.context.desc: The context of the application. All modules must be in this path.
    params.http_proxy.desc: Specify HTTP proxy parameters.
    params.https_proxy.desc: Specify HTTPS proxy parameters.
    params.language.desc: Specify a language
    params.modules.desc: The object of the Buildpack is the application, and an application contains one or more modules。 For multi-module projects, you only need to write the modules that need to be run in the end; for modules of the lib class, no declaration is required.
    params.modules.struct.name.desc: Module name
    params.modules.struct.path.desc: Module path
    params.only_build.desc: Compile applications only, not make images
